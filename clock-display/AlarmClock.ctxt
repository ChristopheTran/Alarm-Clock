#BlueJ class context
comment0.target=AlarmClock
comment0.text=\r\n\ The\ AlarmClock\ class\ creates\ an\ alarm\ clock\ for\ a\ standard\ 12\ hour\ clock.\ The\ \r\n\ alarm\ clock\ will\ display\ the\ clock\ time,\ along\ with\ the\ alarm\ time.\ If\ the\ clock\r\n\ time\ matches\ with\ the\ alarm\ time,\ the\ alarm\ will\ ring.\ The\ ringing\ is\r\n\ simulated\ by\ outputting\ "RING\ RING\ RING"\ to\ the\ console\ (via\ System.out.println()).\r\n\r\n\ @author\ Christophe\ Tran\r\n\ @version\ 2017.09.22\r\n
comment1.params=
comment1.target=AlarmClock()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ AlarmClock.\ This\ constructor\ creates\ a\ clock\r\n\ set\ to\ 12\:00a.m\ and\ an\ alarm\ set\ to\ 12\:00a.m\ with\ the\ alarm\ turned\ off.\r\n
comment10.params=
comment10.target=java.lang.Boolean\ isAlarmSet()
comment10.text=\r\n\ Checks\ if\ the\ alarm\ is\ turned\ on\ or\ not.\r\n\ \r\n\ @return\ true\ if\ alarm\ is\ turned\ on,\ false\ otherwise\r\n
comment2.params=clockHour\ clockMin\ clockAmPm\ alarmHour\ alarmMin\ alarmAmPm\ alarmState
comment2.target=AlarmClock(int,\ int,\ java.lang.String,\ int,\ int,\ java.lang.String,\ java.lang.Boolean)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ AlarmClock.\ This\ constructor\ creates\ a\ clock\r\n\ and\ alarm\ set\ to\ the\ time\ specified\ in\ the\ parameters\ along\ with\ whether\ the\ alarm\ is\ on\ or\ off.\r\n\ \r\n\ @param\ clockHour\ Hour\ of\ the\ clock\r\n\ @param\ clockMin\ Minute\ of\ the\ clock\r\n\ @param\ clockAmPm\ a.m\ or\ p.m\ for\ the\ clock\r\n\ @param\ alarmHour\ Hour\ of\ the\ alarm\r\n\ @param\ alarmMin\ Minute\ of\ the\ alarm\r\n\ @param\ alarmAmPm\ a.m\ or\ p.m\ for\ the\ alarm\r\n\ @param\ alarmState\ Whether\ the\ alarm\ is\ on\ or\ off\r\n
comment3.params=hour\ minute\ timeState
comment3.target=void\ setTime(int,\ int,\ java.lang.String)
comment3.text=\r\n\ Set\ the\ time\ of\ the\ clock\ to\ the\ time\ specified\ in\ the\ parameters.\r\n\ \r\n\ @param\ hour\ The\ hour\ of\ the\ clock\r\n\ @param\ minute\ The\ minute\ of\ the\ clock\r\n\ @param\ timeState\ a.m\ or\ p.m\ for\ the\ clock\r\n
comment4.params=hour\ minute\ timeState
comment4.target=void\ setAlarmTime(int,\ int,\ java.lang.String)
comment4.text=\r\n\ Set\ the\ time\ of\ the\ alarm\ to\ the\ time\ specified\ in\ the\ parameters.\r\n\ \r\n\ @param\ hour\ The\ hour\ of\ the\ alarm\r\n\ @param\ minute\ The\ minute\ of\ the\ alarm\r\n\ @param\ timeState\ a.m\ or\ p.m\ for\ the\ alarm\r\n
comment5.params=
comment5.target=void\ clockTick()
comment5.text=\r\n\ Makes\ the\ clock\ display\ go\ one\ minute\ forward.\ If\ the\ clock\ time\ matches\ the\ \r\n\ alarm\ time,\ the\ alarm\ will\ ring\ and\ then\ be\ turned\ off.\r\n
comment6.params=
comment6.target=void\ setAlarm()
comment6.text=\r\n\ Turns\ the\ alarm\ of\ the\ alarm\ clock\ on.\r\n
comment7.params=
comment7.target=void\ unsetAlarm()
comment7.text=\r\n\ Turns\ the\ alarm\ of\ the\ alarm\ clock\ off.\r\n
comment8.params=
comment8.target=java.lang.String\ getTime()
comment8.text=\r\n\ Returns\ the\ current\ time\ of\ the\ clock\ in\ the\ format\ HH\:MM.\r\n\ \r\n\ @return\ The\ current\ time\ of\ the\ clock\r\n
comment9.params=
comment9.target=java.lang.String\ getAlarmTime()
comment9.text=\r\n\ Returns\ the\ time\ of\ the\ alarm\ in\ the\ format\ HH\:MM.\r\n\ \r\n\ @return\ The\ current\ time\ of\ the\ alarm\r\n
numComments=11
